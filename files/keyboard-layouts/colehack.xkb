// Colehack symbols for xkb on X.Org Server 7.x
// 2014-02-25 Erik Falor, Public domain.
// 2006-01-01 Shai Coleman, http://colemak.com/ . Public domain.

partial default alphanumeric_keys
xkb_symbols "basic" {
    include "us(basic)"
    name[Group1]= "Colehack";

    // Alphanumeric section
    key <TLDE> { [        grave,   asciitilde,      dead_tilde,       asciitilde ] };
    key <AE01> { [            0,       exclam,      exclamdown,      onesuperior ] };
    key <AE02> { [            1,           at,       masculine,      twosuperior ] };
    key <AE03> { [            2,   numbersign,     ordfeminine,    threesuperior ] };
    key <AE04> { [            3,       dollar,            cent,         sterling ] };
    key <AE05> { [            4,      percent,        EuroSign,              yen ] };
    key <AE06> { [            5,  asciicircum,         hstroke,          Hstroke ] };
    key <AE07> { [            6,    ampersand,             eth,              ETH ] };
    key <AE08> { [            7,     asterisk,           thorn,            THORN ] };
    key <AE09> { [            8,    parenleft,  leftsinglequotemark,  leftdoublequotemark ] };
    key <AE10> { [            9,   parenright, rightsinglequotemark,  rightdoublequotemark ] };
    key <AE11> { [        minus,   underscore,          endash,           emdash ] };
    key <AE12> { [        equal,         plus,        multiply,         division ] };

    key <AD01> { [            q,            Q,      adiaeresis,       Adiaeresis ] };
    key <AD02> { [            w,            W,           aring,            Aring ] };
    key <AD03> { [            f,            F,          atilde,           Atilde ] };
    key <AD04> { [            p,            P,          oslash,         Ooblique ] };
    key <AD05> { [            g,            G,     dead_ogonek,       asciitilde ] };
    key <AD06> { [            k,            K,         dstroke,          Dstroke ] };
    key <AD07> { [            l,            L,         lstroke,          Lstroke ] };
    key <AD08> { [            u,            U,          uacute,           Uacute ] };
    key <AD09> { [            y,            Y,      udiaeresis,       Udiaeresis ] };
    key <AD10> { [        colon,    semicolon,      odiaeresis,       Odiaeresis ] };
    key <AD11> { [  bracketleft,    braceleft,   guillemotleft,        0x1002039 ] };
    key <AD12> { [ bracketright,   braceright,  guillemotright,        0x100203a ] };
    key <BKSL> { [    backslash,          bar,      asciitilde,       asciitilde ] };

    key <AC01> { [            a,            A,          aacute,           Aacute ] };
    key <AC02> { [            r,            R,      dead_grave,       asciitilde ] }; 
    key <AC03> { [            s,            S,          ssharp,       asciitilde ] }; 
    key <AC04> { [            t,            T,      dead_acute, dead_doubleacute ] };
    key <AC05> { [            d,            D,  dead_diaeresis,       asciitilde ] };
    key <AC06> { [            h,            H,      dead_caron,       asciitilde ] };
    key <AC07> { [            n,            N,          ntilde,           Ntilde ] };
    key <AC08> { [            e,            E,          eacute,           Eacute ] };
    key <AC09> { [            i,            I,          iacute,           Iacute ] };
    key <AC10> { [            o,            O,          oacute,           Oacute ] };
    key <AC11> { [   apostrophe,     quotedbl,          otilde,           Otilde ] }; 

    key <AB01> { [            z,            Z,              ae,               AE ] };
    key <AB02> { [            x,            X, dead_circumflex,       asciitilde ] };
    key <AB03> { [            c,            C,        ccedilla,         Ccedilla ] };
    key <AB04> { [            v,            V,              oe,               OE ] };
    key <AB05> { [            b,            B,      dead_breve,       asciitilde ] };
    key <AB06> { [            j,            J,  dead_abovering,       asciitilde ] };
    key <AB07> { [            m,            M,     dead_macron,       asciitilde ] };
    key <AB08> { [        comma,         less,    dead_cedilla,       asciitilde ] };
    key <AB09> { [       period,      greater,   dead_abovedot,       asciitilde ] };
    key <AB10> { [        slash,     question,    questiondown,       asciitilde ] };

    key <CAPS> { [    BackSpace,       Delete,       BackSpace,        BackSpace ] };
    key <LSGT> { [        minus,   underscore,          endash,           emdash ] };
    key <SPCE> { [        space,        space,           space,     nobreakspace ] };

    // load hexadecimal digits onto keypad digits, accessible via AltGr
    // TODO: make this work like on the Linux Consloe where I can type the Hex
    // keys using Alt and use AltGr to input Unicode chars by their hex values
    key  <KP4> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Left,   KP_4,   D,  d   ]   };
    key  <KP5> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Begin,  KP_5,   E,  e   ]   };
    key  <KP6> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Right,  KP_6,   F,  f   ]   };

    key  <KP1> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_End,    KP_1,   A,  a   ]   };
    key  <KP2> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Down,   KP_2,   B,  b   ]   };
    key  <KP3> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Next,   KP_3,   C,  c   ]   };

    // Update Keypad Delete to type 'x' and 'X'; one can type 0xdeadbeef all on
    // the 10-key
    key  <KPDL> {
        type="FOUR_LEVEL_KEYPAD",
        symbols[Group1] = [  KP_Delete,   KP_Decimal,  X,  x   ]   };

    // Allow switching between primary and secondary keymap with LAlt+RAlt
    // Sometimes this doesn't work due to a bug in
    // /usr/share/X11/xkb/symbols/group (I think).
    //
    // If that's the case, comment out this line here...
    include "level3(ralt_switch)"

    // And uncomment this block:
    //
    // virtual_modifiers LAlt, RAlt;
    // key <LALT> {
    //     type[Group1]="PC_ALT_LEVEL2",
    //     symbols[Group1]= [ NoSymbol,	ISO_Prev_Group ],
    //     virtualMods= LAlt
    // };
    // key <RALT> {
    //     type[Group1]="PC_ALT_LEVEL2",
    //     symbols[Group1]= [ NoSymbol,	ISO_Next_Group ],
    //     virtualMods= RAlt
    // };
};

// vim:set filetype=xkb expandtab shiftwidth=4 tabstop=4:
